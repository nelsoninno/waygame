var gdjs;(function(n){const i=new n.Logger("Multiplayer");let W;(function(t){t.disableMultiplayerForTesting=!1;let C=null,R=!1,k=!1,E=!1;t._isLobbyGameRunning=!1;let A=!1,m=null,y=null;t._lobby=null;let v=[],M=null,c=null,G=null,U=null;const $=1e4,H=3e4,B=5;let P=!1;t.playerNumber=null,n.registerRuntimeScenePreEventsCallback(e=>{P=e.getGame().isUsingGDevelopDevelopmentEnvironment(),!t.disableMultiplayerForTesting&&(n.multiplayerMessageManager.handleChangeInstanceOwnerMessagesReceived(e),n.multiplayerMessageManager.handleUpdateInstanceMessagesReceived(e),n.multiplayerMessageManager.handleCustomMessagesReceived(),n.multiplayerMessageManager.handleAcknowledgeMessagesReceived(),n.multiplayerMessageManager.resendClearOrCancelAcknowledgedMessages(e),n.multiplayerMessageManager.handleChangeVariableOwnerMessagesReceived(e),n.multiplayerMessageManager.handleUpdateGameMessagesReceived(e),n.multiplayerMessageManager.handleUpdateSceneMessagesReceived(e),n.multiplayerMessageManager.handleHeartbeatsToSend(),n.multiplayerMessageManager.handleDisconnectedPeers(e))}),n.registerRuntimeScenePostEventsCallback(e=>{t.disableMultiplayerForTesting||(n.multiplayerMessageManager.handleDestroyInstanceMessagesReceived(e),n.multiplayerVariablesManager.handleChangeVariableOwnerMessagesToSend(),n.multiplayerMessageManager.handleUpdateGameMessagesToSend(e),n.multiplayerMessageManager.handleUpdateSceneMessagesToSend(e),n.multiplayerMessageManager.handleHeartbeatsReceived(),K(e),n.multiplayerMessageManager.clearDisconnectedPeers())}),n.registerRuntimeScenePostEventsCallback(()=>{t.disableMultiplayerForTesting||(E=!1,A=!1)});const V=({runtimeGame:e,gameId:o})=>{const r="https://gd.games",s=new URL(`${r}/games/${o}/lobbies${m?`/${m}`:""}`);s.searchParams.set("gameVersion",e.getGameData().properties.version),e.getAdditionalOptions().nativeMobileApp&&s.searchParams.set("nativeMobileApp","true"),s.searchParams.set("isPreview",e.isPreview()?"true":"false"),P&&s.searchParams.set("dev","true"),y&&s.searchParams.set("connectionId",y),t.playerNumber&&s.searchParams.set("positionInLobby",t.playerNumber.toString());const l=n.playerAuthentication.getUserId();l&&s.searchParams.set("playerId",l);const a=n.playerAuthentication.getUserToken();return a&&s.searchParams.set("playerToken",a),s.toString()};t.hasLobbyGameJustStarted=()=>E,t.isLobbyGameRunning=()=>t._isLobbyGameRunning,t.hasLobbyGameJustEnded=()=>A,t.getPlayersInLobbyCount=()=>!t._isLobbyGameRunning&&t._lobby?t._lobby.players.length:t._isLobbyGameRunning?n.multiplayerMessageManager.getNumberOfConnectedPlayers():0,t.getCurrentPlayerNumber=()=>t.playerNumber||0,t.isPlayerHost=()=>t.playerNumber===1;const J=e=>{if(!t._lobby)return"";const o=e-1;return o<0||o>=t._lobby.players.length?"":t._lobby.players[o].playerId};t.getPlayerUsername=e=>{const o=J(e);if(!o)return"";const r=v.find(s=>s.id===o);return r?r.username:`Player ${e}`},t.getCurrentPlayerUsername=()=>{const e=t.getCurrentPlayerNumber();return t.getPlayerUsername(e)};const K=e=>{const o=n.multiplayerMessageManager.getDisconnectedPlayers();if(o.length>0)for(const r of o){const s=J(r);if(!s)return;const l=v.find(a=>a.id===s);l&&n.multiplayerComponents.displayPlayerLeftNotification(e,l&&l.username||"Player")}},_=(e,o,r=0)=>{const l=`${P?"https://api-dev.gdevelop.io":"https://api.gdevelop.io"}/game/public-game/${o}`;return fetch(l,{method:"HEAD"}).then(a=>a.status!==200?(i.warn(`Error while fetching the game: ${a.status} ${a.statusText}`),a.status===404||r>2?!1:_(e,o,r+1)):!0,a=>(i.error("Error while fetching game:",a),!1))},Y=async(e,o)=>{const s=`${o?"https://api-dev.gdevelop.io":"https://api.gdevelop.io"}/user/user-public-profile/${e}`;return(await fetch(s)).json()},q=async e=>{if(!t._lobby)return;const o=t._lobby.players.map(a=>a.playerId),r=v.map(a=>a.id),s=o.filter(a=>!r.includes(a)),l=r.filter(a=>!o.includes(a));if(!(s.length===0&&l.length===0)){if(s.length>0){const a=await Promise.all(s.map(async g=>await Y(g,e)));v=[...v,...a]}l.length>0&&(v=v.filter(g=>!l.includes(g.id)))}},Q=function(e,o){if(y){i.info("Already connected to a lobby.");return}c&&(i.warn("Already connected to a lobby. Closing the previous one."),c.close(),y=null,t.playerNumber=null,m=null,t._lobby=null,c=null);const r=n.projectData.properties.projectUuid,s=n.playerAuthentication.getUserId(),l=n.playerAuthentication.getUserToken();if(!r){i.error("Cannot open lobbies if the project has no ID.");return}if(!s||!l){i.warn("Cannot open lobbies if the player is not connected.");return}const a=P?"wss://api-ws-dev.gdevelop.io/play":"wss://api-ws.gdevelop.io/play",g=new URL(a);g.searchParams.set("gameId",r),g.searchParams.set("lobbyId",o),g.searchParams.set("playerId",s),g.searchParams.set("connectionType","lobby"),g.searchParams.set("playerGameToken",l),c=new WebSocket(g.toString()),c.onopen=()=>{if(i.info("Connected to the lobby."),G=setInterval(()=>{c&&c.send(JSON.stringify({action:"heartbeat",connectionType:"lobby"}))},$),c){c.send(JSON.stringify({action:"getConnectionId"}));const d=e.getGame().getPlatformInfo();c.send(JSON.stringify({action:"sessionInformation",connectionType:"lobby",isCordova:d.isCordova,devicePlatform:d.devicePlatform,navigatorPlatform:d.navigatorPlatform,hasTouch:d.hasTouch,supportedCompressionMethods:d.supportedCompressionMethods}))}},c.onmessage=d=>{if(d.data){const b=JSON.parse(d.data);switch(b.type){case"connectionId":{const p=b.data,f=p.connectionId,w=p.positionInLobby,be=p.validIceServers||[],pe=p.brokerServerConfig;if(!f||!w){i.error("No connectionId or position received"),n.multiplayerComponents.displayErrorNotification(e),c&&c.close();return}X({runtimeScene:e,connectionId:f,positionInLobby:w,lobbyId:o,playerId:s,playerToken:l,validIceServers:be,brokerServerConfig:pe});break}case"lobbyUpdated":{const p=b.data,f=p.lobby,w=p.positionInLobby;if(!f){i.error("No lobby received");return}Z({runtimeScene:e,updatedLobby:f,positionInLobby:w});break}case"gameCountdownStarted":{const p=b.data,f=p.compressionMethod||"none",w=p.secondsToStart||B;ee({runtimeScene:e,compressionMethod:f,secondsToStart:w});break}case"gameStarted":{const f=b.data.heartbeatInterval||H;ne({runtimeScene:e,heartbeatInterval:f});break}case"peerId":{const p=b.data;if(!p){i.error("No message received");return}const f=p.peerId;if(!f){i.error("Malformed message received");return}te({peerId:f});break}}}},c.onclose=()=>{if(i.info("Disconnected from the lobby. Either manually or game started."),y=null,c=null,G&&clearInterval(G),t._isLobbyGameRunning)return;const d=n.multiplayerComponents.getLobbiesIframe(e);!d||!d.contentWindow||d.contentWindow.postMessage({id:"lobbyLeft"},"*")}},X=function({runtimeScene:e,connectionId:o,positionInLobby:r,lobbyId:s,playerId:l,playerToken:a,validIceServers:g,brokerServerConfig:d}){if(g.length)for(const p of g)n.multiplayerPeerJsHelper.useCustomICECandidate(p.urls,p.username,p.credential);d?n.multiplayerPeerJsHelper.useCustomBrokerServer(d.hostname,d.port,d.path,d.key,d.secure):n.multiplayerPeerJsHelper.useDefaultBrokerServer(),y=o,t.playerNumber=r,m=s;const b=n.multiplayerComponents.getLobbiesIframe(e);if(!b||!b.contentWindow){i.error("The lobbies iframe is not opened, cannot send the join message.");return}b.contentWindow.postMessage({id:"lobbyJoined",lobbyId:s,playerId:l,playerToken:a,connectionId:y,positionInLobby:r},"https://gd.games")},j=function(){c&&c.close(),y=null,t.playerNumber=null,m=null,t._lobby=null,c=null},Z=function({runtimeScene:e,updatedLobby:o,positionInLobby:r}){if(t._lobby=o,o.status==="playing")return;q(P),t.playerNumber=r;const s=n.multiplayerComponents.getLobbiesIframe(e);if(!s||!s.contentWindow){i.info("The lobbies iframe is not opened, not sending message.");return}s.contentWindow.postMessage({id:"lobbyUpdated",positionInLobby:r},"*")},ee=function({runtimeScene:e,compressionMethod:o,secondsToStart:r}){n.multiplayerPeerJsHelper.setCompressionMethod(o),t.getCurrentPlayerNumber()===1&&re();const s=n.multiplayerComponents.getLobbiesIframe(e);if(!s||!s.contentWindow){i.info("The lobbies iframe is not opened, not sending message.");return}s.contentWindow.postMessage({id:"gameCountdownStarted",secondsToStart:r},"*"),n.multiplayerComponents.hideLobbiesCloseButtonTemporarily(e)},ne=function({runtimeScene:e,heartbeatInterval:o}){const r=n.multiplayerPeerJsHelper.getAllPeers();if(!t.isPlayerHost()&&r.length===0){n.multiplayerComponents.displayConnectionErrorNotification(e),j(),t.removeLobbiesContainer(e),N(e);return}if(t.isPlayerHost()){const s=n.projectData.properties.projectUuid,l=n.playerAuthentication.getUserId(),a=n.playerAuthentication.getUserToken();if(!s||!l||!a||!m){i.error("Cannot keep the lobby playing without the game ID or player ID.");return}U=setInterval(async()=>{const g=P?"https://api-dev.gdevelop.io":"https://api.gdevelop.io",d={"Content-Type":"application/json"};let b=`${g}/play/game/${s}/public-lobby/${m}/action/heartbeat`;d.Authorization=`player-game-token ${a}`,b+=`?playerId=${l}`,await fetch(b,{method:"POST",headers:d})},o)}i.info("Lobby game has started."),E=!0,t._isLobbyGameRunning=!0,t.removeLobbiesContainer(e),c&&c.close(),N(e)};t.handleLobbyGameEnded=function(){i.info("Lobby game has ended."),A=!0,t._isLobbyGameRunning=!1,m=null,t._lobby=null,t.playerNumber=null,U&&clearInterval(U),n.multiplayerPeerJsHelper.disconnectFromAllPeers(),n.multiplayerMessageManager.clearExpectedMessageAcknowledgements()};const te=function({peerId:e}){const o=n.multiplayerPeerJsHelper.getCurrentId();if(!o){i.error("No peerId found, the player does not seem connected to the broker server.");return}if(o===e){i.info("Received our own peerId, ignoring.");return}n.multiplayerPeerJsHelper.connect(e)},oe=function(){if(!c){i.error("No connection to send the start countdown message. Are you connected to a lobby?");return}c.send(JSON.stringify({action:"startGameCountdown",connectionType:"lobby"}))},se=function(){if(!c){i.error("No connection to send the start countdown message. Are you connected to a lobby?");return}c.send(JSON.stringify({action:"startGame",connectionType:"lobby"}))};t.endLobbyGame=async function(){if(!t.isLobbyGameRunning())return;if(!t.isPlayerHost()){i.error("Only the host can end the game.");return}t._isLobbyGameRunning=!1,i.info("Ending the lobby game."),n.multiplayerMessageManager.sendEndGameMessage();const e=n.projectData.properties.projectUuid,o=n.playerAuthentication.getUserId(),r=n.playerAuthentication.getUserToken();if(!e||!o||!r||!m){i.error("Cannot end the lobby without the game ID or player ID.");return}const s=P?"https://api-dev.gdevelop.io":"https://api.gdevelop.io",l={"Content-Type":"application/json"};let a=`${s}/play/game/${e}/public-lobby/${m}/action/end`;l.Authorization=`player-game-token ${r}`,a+=`?playerId=${o}`;try{await fetch(a,{method:"POST",headers:l,body:JSON.stringify({gameId:e,lobbyId:m})})}catch(g){i.error("Error while ending the game:",g)}t.handleLobbyGameEnded()};const re=function(){if(!c||!t._lobby){i.error("No connection to send the message. Are you connected to a lobby?");return}const e=n.multiplayerPeerJsHelper.getCurrentId();if(!e){i.error("No peerId found, the player doesn't seem connected to the broker server.");return}c.send(JSON.stringify({action:"sendPeerId",connectionType:"lobby",peerId:e}))},ae=function(e,o,{checkOrigin:r}){if(!(r&&!["https://gd.games","http://localhost:4000"].includes(o.origin))){if(!o.data.id)throw new Error("Malformed message");switch(o.data.id){case"lobbiesListenerReady":{ie(e);break}case"joinLobby":{if(!o.data.lobbyId)throw new Error("Malformed message.");Q(e,o.data.lobbyId);break}case"startGameCountdown":{oe();break}case"startGame":{se();break}case"leaveLobby":{j();break}}}},O=function(e,o){i.error(o),t.removeLobbiesContainer(e),N(e)},ie=e=>{const o=n.multiplayerComponents.getLobbiesIframe(e);if(!o||!o.contentWindow)return;const r=e.getGame().getPlatformInfo();o.contentWindow.postMessage({id:"sessionInformation",isCordova:r.isCordova,devicePlatform:r.devicePlatform,navigatorPlatform:r.navigatorPlatform,hasTouch:r.hasTouch},"*")},le=(e,o)=>{const r=V({runtimeGame:e.getGame(),gameId:o});M=s=>{ae(e,s,{checkOrigin:!0})},window.addEventListener("message",M,!0),n.multiplayerComponents.displayIframeInsideLobbiesContainer(e,r)};t.openLobbiesWindow=async e=>{if(t.isLobbiesWindowOpen(e)||n.playerAuthentication.isAuthenticationWindowOpen())return;const o=n.projectData.properties.projectUuid;if(!o){O(e,"The game ID is missing, the lobbies window cannot be opened.");return}if(R||k)return;if(!e.getGame().getRenderer().getDomElementContainer()){O(e,"The div element covering the game couldn't be found, the lobbies window cannot be displayed.");return}const s=()=>{t.removeLobbiesContainer(e)},l=n.playerAuthentication.getUserId(),a=n.playerAuthentication.getUserToken();if(!l||!a){k=!0;const{status:b}=await n.playerAuthentication.openAuthenticationWindow(e).promise;k=!1,b==="logged"&&t.openLobbiesWindow(e);return}if(n.multiplayerComponents.displayLobbies(e,s),C===null){R=!0;try{C=await _(e.getGame(),o)}catch(b){C=!1,i.error("Error while checking if the game is registered:",b),O(e,"Error while checking if the game is registered.");return}finally{R=!1}}const g=e.getGame().getRenderer().getElectron(),d=g?()=>g.shell.openExternal("https://wiki.gdevelop.io/gdevelop5/publishing/web"):()=>window.open("https://wiki.gdevelop.io/gdevelop5/publishing/web","_blank");n.multiplayerComponents.addTextsToLoadingContainer(e,C,d),C&&le(e,o)},t.isLobbiesWindowOpen=function(e){return!!n.multiplayerComponents.getLobbiesRootContainer(e)},t.showLobbiesCloseButton=function(e,o){n.multiplayerComponents.changeLobbiesWindowCloseActionVisibility(e,o)},t.removeLobbiesContainer=function(e){ge(),n.multiplayerComponents.removeLobbiesContainer(e)};const ge=function(){M&&(window.removeEventListener("message",M,!0),M=null)},N=function(e){const o=e.getGame().getRenderer().getCanvas();o&&o.focus()};t.leaveGameLobby=async e=>{j(),t.handleLobbyGameEnded()}})(W=n.multiplayer||(n.multiplayer={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=multiplayertools.js.map
